
Ant、Maven这类构建工具都是基于xml来进行描述的。

Gradle是基于Groovy语言，语法和Java类似，是一种动态语言，在Java的基础上进行了改进，用起来更佳简洁高效。而且Gradle完全兼容Ivy，Maven。

Gradle的推出主要以Java为主，还支持Android，C，C++。

Gradle和Android Studio没有关系，是一个独立的项目，Gradle官方看中Android开发，Google在推出Android Studio选择Gradle作为构建工具，为了支持Gradle，
Google在Android Stduio上做了一个叫Android Gradle Plugin的插件。在根目录的build.gradle中有这么一句话:
       classpath 'com.android.tools.build:gradle:2.1.2'

这个就是依赖Gradle的插件代码，后面的版本号是Android Gradle Plugin插件的版本号，跟Gradle官方无关。

Gradle Wrapper：Gradle的包装。在新建项目的时候，默认会安装Gradle，我们不需要安装额外的Gradle了，但是这个Gradle不是真正的Gradle，而是Gradle 
Wrapper。比如说，本地有两个项目一个用的是比较老的Gradle 1.0版本，一个用的是比较新的Gradle 2.0版本，但是两个项目需要同时运行，所以为了解决这
个问题，Google退出了Gradle Wrapper，他在你每个项目里都配置一个指定版本的Gradle，可以理解为每个项目在本地都有自己的小型Gradle，这样就可以支持
每个不同版本的Android项目同时可运行。

以下操作都是基于Gradle Wrapper

命令行或者Android Studio自带的终端切换到项目所在目录，Win用户输入gradlew -v(Mac用户./gradlew -v)。

一个Android项目相关的Gradle配置文件：
  
  file/app/build.gradle ：app文件夹下Module的gradle的配置文件，也可以算是整个项目最主要的gradle配置文件。
  file/extras/ShimmerAndroid/build.gradle ：每一个 Module 都需要有一个 gradle 配置文件，语法都是一样，唯一不同的是开头声明的是
        apply plugin: ‘com.android.library’ 
  file/gradle/gradle-wrapper.properties ：声明了gradle的目录，下载路径以及当前的gradle版本，这些默认的路径我们一般不会修改，这个文件下的gradle
  版本不对也是很多导包失败的原因之一。
  file/build.gradle ：整个项目gradle基础配置文件，默认声明了android gradle plugin的版本。
  file/settings.gradle ：全局的项目配置文件，里面主要生命了一些加入gradle的module。
  
如果没有IDE，用轻量级编辑器开发Android的时候需要使用的Gradle命令（Win用户去掉./）：
  ./gradle -v
  ./gradle clean  清除file/app目录下的build文件夹
  ./gradle build  检查依赖并编译打包
  ./gradlew assembleDebug   编译并打印debug包
  ./gradlew assembleRelease 编译并打包release包

Gradle官方网站：https://gradle.org/ 
Android Gradle Plugin每个版本的具体变化和功能：http://tools.android.com/tech-docs/new-build-system

原文链接：http://mp.weixin.qq.com/s?__biz=MzA4NTQwNDcyMA==&mid=2650661971&idx=1&sn=3fb69537bbc5fbb14d152ba6381c3b83#rd
